# save history automatically(.gdb_history be default)
(gdb) set history save on
(gdb) set history filename <your_file_name> //[optional]
we can put them in $HOME/.gdbinit.

# set pending breakpoint(such as set breakpoints in .gdbinit)
(gdb) set breakpoint pending on

# save break points
(gdb) save breakpoints file-name-to-save
(gdb) source file-name-to-save

# common commands:
file a.out
run [your param]
x/20xg
x/20s
disassem
bt
frame [N]
info reg
tbreak  // set temporary break point
ignore <break_num> <count> // ignore breakpoint for count times. such as ignore 1 5


# run commands for breakpoint
b file:linenum
commands
end

# can also define function
define adder
  if $argc == 2
    print $arg0 + $arg1
  end
  if $argc == 3
    print $arg0 + $arg1 + $arg2
  end
end

- combine with eval
define adder
  set $i = 0
  set $sum = 0
  while $i < $argc
    eval "set $sum = $sum + $arg%d", $i
    set $i = $i + 1
  end
  print $sum
end


# a sample .gdbinit

```bash
file ffmpeg_g
set env LD_LIBRARY_PATH libavutil:libavcodec:libswscale:libavdevice:libavfilter:libavformat:libpostproc:libswresample
set breakpoint pending on
b libavformat/rtspdec.c:818
commands
set $rtp = (RTPDemuxContext*)rt->rtsp_streams[0]->transport_priv
printf "last_rtcp_ntp_time = %lu\n",$rtp->last_rtcp_ntp_time
printf "first_rtcp_ntp_time = %lu\n", ((RTPDemuxContext*)rt->rtsp_streams[0]->transport_priv)->first_rtcp_ntp_time
printf "range_start_offset = %ld\n", ((RTPDemuxContext*)rt->rtsp_streams[0]->transport_priv)->range_start_offset
printf "rtcp_ts_offset = %ld\n", ((RTPDemuxContext*)rt->rtsp_streams[0]->transport_priv)->rtcp_ts_offset
printf "st->time_base.num = %d\n", ((RTPDemuxContext*)rt->rtsp_streams[0]->transport_priv)->st->time_base.num 
printf "st->time_base.den = %d\n", ((RTPDemuxContext*)rt->rtsp_streams[0]->transport_priv)->st->time_base.den
continue
end
#start -y -i "rtsp://admin:1111@10.4.12.30/1" test.mp4
run
```



